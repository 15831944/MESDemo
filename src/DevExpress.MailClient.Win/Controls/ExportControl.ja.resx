<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"></xsd:import>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"></xsd:attribute>
              <xsd:attribute name="name" type="xsd:string"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"></xsd:attribute>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"></xsd:attribute>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"></xsd:attribute>
              <xsd:attribute ref="xml:space"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"></xsd:element>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"></xsd:attribute>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="galleryItem1.Caption" xml:space="preserve">
    <value>PDF ファイル</value>
    <comment>PDF File</comment>
  </data>
  <data name="galleryItem1.Description" xml:space="preserve">
    <value>Adobe ポータブルドキュメント形式</value>
    <comment>Adobe Portable Document Format</comment>
  </data>
  <data name="galleryItem2.Caption" xml:space="preserve">
    <value>HTML ファイル</value>
    <comment>HTML File</comment>
  </data>
  <data name="galleryItem2.Description" xml:space="preserve">
    <value>Web ページ</value>
    <comment>Web Page</comment>
  </data>
  <data name="galleryItem3.Caption" xml:space="preserve">
    <value>MHT ファイル</value>
    <comment>MHT File</comment>
  </data>
  <data name="galleryItem3.Description" xml:space="preserve">
    <value>単一ファイルの Web ページ</value>
    <comment>Single File Web Page</comment>
  </data>
  <data name="galleryItem4.Caption" xml:space="preserve">
    <value>RTF ファイル</value>
    <comment>RTF File</comment>
  </data>
  <data name="galleryItem4.Description" xml:space="preserve">
    <value>リッチテキスト形式</value>
    <comment>Rich Text Format</comment>
  </data>
  <data name="galleryItem5.Caption" xml:space="preserve">
    <value>XLS ファイル</value>
    <comment>XLS File</comment>
  </data>
  <data name="galleryItem5.Description" xml:space="preserve">
    <value>Microsoft Excel 2000-2003 ワークブック</value>
    <comment>Microsoft Excel 2000-2003 Workbook</comment>
  </data>
  <data name="galleryItem6.Caption" xml:space="preserve">
    <value>XLSX ファイル</value>
    <comment>XLSX File</comment>
  </data>
  <data name="galleryItem6.Description" xml:space="preserve">
    <value>Microsoft Excel 2007 ワークブック</value>
    <comment>Microsoft Excel 2007 Workbook</comment>
  </data>
  <data name="galleryItem7.Caption" xml:space="preserve">
    <value>CSV ファイル</value>
    <comment>CSV File</comment>
  </data>
  <data name="galleryItem7.Description" xml:space="preserve">
    <value>カンマ区切り(CSV)のテキスト</value>
    <comment>Comma-Separated Values Text</comment>
  </data>
  <data name="galleryItem8.Caption" xml:space="preserve">
    <value>テキスト ファイル</value>
    <comment>Text File</comment>
  </data>
  <data name="galleryItem8.Description" xml:space="preserve">
    <value>プレーン テキスト</value>
    <comment>Plain Text</comment>
  </data>
  <data name="galleryItem9.Caption" xml:space="preserve">
    <value>画像ファイル</value>
    <comment>Image File</comment>
  </data>
  <data name="galleryItem9.Description" xml:space="preserve">
    <value>BMP、GIF、JPEG、PNG、TIFF、EMF、WMF</value>
    <comment>BMP, GIF, JPEG, PNG, TIFF, EMF, WMF</comment>
  </data>
  <data name="backstageViewLabel1.Text" xml:space="preserve">
    <value>エクスポート</value>
    <comment>Export</comment>
  </data>
  <data name="saveFileDialog1.Title" xml:space="preserve">
    <value>エクスポート...</value>
    <comment>Export...</comment>
  </data>
</root>